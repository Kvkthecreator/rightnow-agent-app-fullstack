#!/usr/bin/env python3
"""Test script to demonstrate PDF(v1) + chunking functionality"""

import json
from src.app.ingestion.pipeline import chunk_text
from src.app.ingestion.parsers.pdf_text import extract_pdf_text

def test_scenarios():
    print("=== Testing Canon-aligned /dumps/new scenarios ===\n")
    
    # Test 1: Small text only
    print("1. Small text only:")
    small_text = "This is a small document."
    chunks = chunk_text(small_text, max_len=30000)
    print(f"   Input length: {len(small_text)}")
    print(f"   Chunks created: {len(chunks)}")
    print(f"   Expected response: raw_dump_id + raw_dump_ids with 1 ID\n")
    
    # Test 2: Large text (will chunk)
    print("2. Large text (simulated):")
    large_text = "Lorem ipsum dolor sit amet. " * 2000  # ~56k chars
    chunks = chunk_text(large_text, max_len=30000)
    print(f"   Input length: {len(large_text)}")
    print(f"   Chunks created: {len(chunks)}")
    print(f"   Expected response: raw_dump_id + raw_dump_ids with {len(chunks)} IDs\n")
    
    # Test 3: PDF extraction (would need real PDF)
    print("3. PDF text extraction:")
    print("   With ENABLE_PDF_V1=1 and valid PDF URL:")
    print("   - Text-based PDF → extracts text → chunks")
    print("   - Scanned PDF → no text → single reference dump")
    print("   - Non-allowed URL → skipped, kept as reference\n")
    
    # Test 4: Empty input handling
    print("4. Empty/reference only:")
    print("   If no text extracted, creates single dump with:")
    print("   body_md = '[file](url1)\\n\\n[file](url2)'")
    print("   So there's always at least one source row\n")
    
    # Headers flow
    print("=== Header Flow ===")
    print("X-Req-Id: Generated by frontend → flows through all layers")
    print("- Frontend: X-Req-Id in /api/dumps/new")
    print("- Proxy: Forwards to backend")
    print("- Backend: Logs with req_id, includes in event payload")
    print("- Work call: Same X-Req-Id continues the flow\n")
    
    # Response format
    print("=== Response Format (always both) ===")
    response_example = {
        "raw_dump_id": "abc123...",  # First ID
        "raw_dump_ids": ["abc123...", "def456..."]  # All IDs
    }
    print(json.dumps(response_example, indent=2))

if __name__ == "__main__":
    test_scenarios()