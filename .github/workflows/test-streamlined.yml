name: YARNNN Test Suite (Streamlined)

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'web/**'
      - 'shared/**'
      - 'tests/**'
      - 'scripts/**'
      - '.github/workflows/test-streamlined.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'web/**'
      - 'shared/**'
      - 'tests/**'
      - 'scripts/**'
      - '.github/workflows/test-streamlined.yml'

env:
  # Supabase configuration (required for auth and API seeding)
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://galytxxkrbksilekmhcw.supabase.co' }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

  # Application URLs
  NEXT_PUBLIC_API_BASE_URL: ''
  BACKEND_URL: 'https://api.yarnnn.com'

jobs:
  agent-test:
    name: Agent Test Pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install --prefix web

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Agent Test (all)
        run: npm run agent:test -- --subset=all
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          NEXT_PUBLIC_SUPABASE_URL: ${{ env.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ env.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-test-artifacts
          path: artifacts/*
          retention-days: 7

      - name: Comment report on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const md = fs.readFileSync('artifacts/test-report.md','utf8');
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: md
              });
            } catch (error) {
              console.log('Could not post test report:', error.message);
            }