name: CI

on:
  push:
    paths:
      - 'api/**'
      - 'tests/**'
      - 'apps/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'api/**'
      - 'tests/**'
      - 'apps/**'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: api/src
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # âœ… Pinning Python version to 3.10 for supabase-py compatibility
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync --all-extras --all-packages --group dev
      - name: Run tests
        run: make tests
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Auth handshake guard
        run: node scripts/check-auth-handshake.mjs
      - name: Pattern guard
        run: scripts/pattern_guard.sh

  web:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_BASE_URL: ""
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - run: npm ci
      - run: npm run build
      - run: npx playwright install --with-deps
      - run: npm run test:e2e

  apps-chatgpt:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/chatgpt
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: apps/chatgpt/package-lock.json
      - run: npm ci
      - run: npm run typecheck
