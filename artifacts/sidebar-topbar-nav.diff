diff --git a/web/components/common/TopBar.tsx b/web/components/common/TopBar.tsx
index 10cce339..6cb24fe2 100644
--- a/web/components/common/TopBar.tsx
+++ b/web/components/common/TopBar.tsx
@@ -5,22 +5,54 @@ import { useNavState } from "@/components/nav/useNavState";
 import { usePathname } from "next/navigation";
 import { cn } from "@/lib/utils";
 import React from "react";
+import Link from "next/link";
+import { SECTION_ORDER } from "@/components/features/baskets/sections";
 
 export default function TopBar() {
   const { toggle, open } = useNavState();
   const pathname = usePathname();
 
-  const pageTitle = React.useMemo(() => {
-    if (!pathname || pathname === "/") return "yarnnn";
+  const crumbs = React.useMemo(() => {
+    const items: { label: string; href?: string }[] = [];
+    if (!pathname) return items;
     const segments = pathname.split("/").filter(Boolean);
-    const last = segments[segments.length - 1] || "yarnnn";
-    return decodeURIComponent(last).replace(/[-_]/g, " ");
+
+    const labelBySegment: Record<string, string> = SECTION_ORDER.reduce(
+      (acc, s) => {
+        const href = s.href("_id_");
+        const end = href.split("/").filter(Boolean).pop();
+        if (end) acc[end] = s.label;
+        return acc;
+      },
+      {} as Record<string, string>
+    );
+
+    if (segments[0] === "baskets") {
+      const basketId = segments[1];
+      items.push({ label: "Baskets", href: "/baskets" });
+      if (basketId) {
+        items.push({ label: "Basket", href: `/baskets/${basketId}/memory` });
+      }
+      const section = segments[2];
+      if (section) {
+        items.push({ label: labelBySegment[section] ?? capitalize(section) });
+      }
+      if (segments.length > 3) {
+        items.push({ label: prettify(segments[segments.length - 1]) });
+      }
+      return items;
+    }
+
+    items.push({ label: prettify(segments[0] ?? "yarnnn"), href: "/" });
+    if (segments.length > 1) items.push({ label: prettify(segments[1]) });
+    return items;
   }, [pathname]);
 
   return (
     <header
       className={cn(
-        "sticky top-0 z-[70] flex h-12 items-center gap-2 border-b bg-background/70 px-3 backdrop-blur"
+        "sticky top-0 z-[70] flex h-12 items-center gap-2 px-3",
+        "bg-transparent backdrop-blur-sm"
       )}
     >
       <button
@@ -35,11 +67,38 @@ export default function TopBar() {
         <SidebarToggleIcon className="h-5 w-5 text-muted-foreground" />
       </button>
 
-      <span className="flex-1 truncate text-sm font-medium">
-        {pageTitle}
-      </span>
+      <nav aria-label="Breadcrumb" className="flex-1 overflow-hidden">
+        <ol className="flex items-center gap-1 text-xs text-muted-foreground overflow-x-auto">
+          {crumbs.map((c, i) => (
+            <li key={i} className="shrink-0">
+              {i > 0 && <span className="mx-1">â€º</span>}
+              {c.href ? (
+                <Link href={c.href} className="hover:text-foreground">
+                  {c.label}
+                </Link>
+              ) : (
+                <span className="text-foreground/80">{c.label}</span>
+              )}
+            </li>
+          ))}
+        </ol>
+      </nav>
 
       <div className="w-5" />
     </header>
   );
+
+function prettify(s: string) {
+  try {
+    return decodeURIComponent(s).replace(/[-_]/g, " ");
+  } catch {
+    return s;
+  }
+}
+
+function capitalize(s: string) {
+  if (!s) return s;
+  return s.charAt(0).toUpperCase() + s.slice(1);
+}
+
 }
