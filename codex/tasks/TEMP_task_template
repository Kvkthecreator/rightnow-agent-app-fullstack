# 🧠 Codex TEMP Task Template (v2)

Use this template when defining any TEMP-class task to run through Codex. It ensures clarity, containment, and coherence across system layers.

---

## 📄 Task Title

*Example: Add Output Format Support to Agent Responses*

---

## 🎯 Goal

Summarize what this task should accomplish and why it matters.

* What are we changing?
* What problem or need does this solve?
* What’s the desired outcome?

---

## 📂 Scope Definition Grid

Define what this task should touch — and what it should avoid:

| Layer        | In Scope | Out of Scope |
| ------------ | -------- | ------------ |
| Backend      |          |              |
| DB Schema    |          |              |
| Frontend     |          |              |
| Webhooks/API |          |              |

---

## 🌊 Ripple Tracker

Mark the expected downstream effects of the change:

* [ ] DB schema → API output
* [ ] API → Supabase insert
* [ ] Supabase → UI rendering
* [ ] Format support → fallback logic

---

## 🧱 Data Contract / Schema Changes

Clearly show the **before** and **after** of the data shape:

```ts
// Before
interface AgentOutput {
  body: string;
}

// After
interface AgentOutput {
  body: string;
  format: 'markdown' | 'json';
  version: string;
}
```

Also include:

* Expected DB table DDL diff (if applicable)
* JSON examples before/after

---

## 🔁 Cross-System Considerations

Mention anything that must be kept in sync:

* TS types ↔ DB schema
* API responses ↔ webhook contracts
* Agent logic ↔ frontend display

---

## 📎 Codex Context Bundle

Ensure the following are present in `codex/context/<task-name>/`:

* [ ] `current_schema.sql` or `ddl.md`
* [ ] `sample_output_before.json`
* [ ] `target_output_after.json`
* [ ] `interface.ts`
* [ ] `flow_map.md`

---

## 🛡️ Guardrails & Constraints

* [ ] Do not break existing webhook payloads
* [ ] Must be backward compatible with v1 output
* [ ] Only write to `feat/<task-title>` branch

---

## 🧪 Test & Validate

Codex should provide or trigger tests for:

* [ ] Agent output shape validation
* [ ] Supabase insert success
* [ ] Frontend fallback for unsupported formats
* [ ] CLI or unit tests (if applicable)

---

## 📜 Codex Session Logging

Log decisions, diffs, and assumptions in:
`codex/sessions/<task-name>.md`

---

Paste this full prompt into Codex only **after** completing the Preflight Checklist.
